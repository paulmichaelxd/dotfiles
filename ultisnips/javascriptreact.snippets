# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
snippet cl "Console.log" w
console.log($0);
endsnippet

snippet id "Import Default" b
import $1 from '$2';$0
endsnippet

snippet in "Import Named" b
import { $1 } from '$2';$0
endsnippet

snippet t "A React JSX Tag" b
<${1:div}>
	${2:Hello World!}
</$1>
endsnippet

snippet fun "New function" b
const ${1:doSomething} = () => {
	$0
};
endsnippet

snippet afun "New async function" b
const ${1:doSomething} = async () => {
	$0
};
endsnippet

snippet rnf "New React File" b
import React from 'react';
import PropTypes from 'prop-types';
import { makeStyles } from '@material-ui/styles';

const useStyles = makeStyles(theme => ({
	container: {

	},
}));

const ${1:Component} = (props) => {
	const { value } = props;
	const classes = useStyles();

	return (
		<div className={classes.container}>
			Hello World!
		</div>
	);
};

$1.propTypes = {

};

export default $1;
e
